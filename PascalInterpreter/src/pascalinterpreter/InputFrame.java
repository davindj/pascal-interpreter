/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pascalinterpreter;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author Acer
 */
public class InputFrame extends javax.swing.JFrame {
    
    
    /**
     * Creates new form InputFrame
     */
    public InputFrame() {
        initComponents();
        easter();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        rain1 = new javax.swing.JTextField();
        compile = new javax.swing.JButton();
        save = new javax.swing.JButton();
        load = new javax.swing.JButton();
        rain2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        input = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pascal Interpreter");
        setLocationByPlatform(true);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Menu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Consolas", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setAutoscrolls(true);

        rain1.setEditable(false);
        rain1.setBackground(new java.awt.Color(0, 0, 0));
        rain1.setText("                      ");
        rain1.setBorder(null);
        jPanel1.add(rain1);

        compile.setBackground(new java.awt.Color(0, 0, 0));
        compile.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        compile.setForeground(new java.awt.Color(51, 255, 102));
        compile.setText("Run");
        compile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                compileMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                compileMouseExited(evt);
            }
        });
        compile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compileActionPerformed(evt);
            }
        });
        jPanel1.add(compile);

        save.setBackground(new java.awt.Color(0, 0, 0));
        save.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        save.setForeground(new java.awt.Color(102, 255, 102));
        save.setText("Save");
        save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                saveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveMouseExited(evt);
            }
        });
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        jPanel1.add(save);

        load.setBackground(new java.awt.Color(0, 0, 0));
        load.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        load.setForeground(new java.awt.Color(102, 255, 102));
        load.setText("Load");
        load.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                loadMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                loadMouseExited(evt);
            }
        });
        load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadActionPerformed(evt);
            }
        });
        jPanel1.add(load);

        rain2.setEditable(false);
        rain2.setBackground(new java.awt.Color(0, 0, 0));
        rain2.setText("                      ");
        rain2.setBorder(null);
        jPanel1.add(rain2);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(800, 500));

        input.setBackground(new java.awt.Color(0, 0, 204));
        input.setColumns(20);
        input.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        input.setForeground(new java.awt.Color(255, 255, 0));
        input.setLineWrap(true);
        input.setRows(5);
        input.setTabSize(4);
        input.setText("begin\n\twriteln('Hello, world!');\nend.");
        input.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pascal.SourceCode", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Consolas", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        input.setCaretColor(new java.awt.Color(255, 255, 0));
        input.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(input);
        input.getAccessibleContext().setAccessibleName("Pascal.SourceCode");

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void compileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compileActionPerformed
        // TODO add your handling code here:
        execute();
    }//GEN-LAST:event_compileActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        String fileName = JOptionPane.showInputDialog(null,"File Name : ","Save File", JOptionPane.QUESTION_MESSAGE);
        fileName =  fileName==null ? "" : fileName ;
        if(!fileName.equals(""))
        try {
            // TODO add your handling code here:
            FileWriter fw = new FileWriter("PascalProject/" + fileName + ".pas");
            fw.write(input.getText()); fw.close();            
            
            JOptionPane.showMessageDialog(null, "Save Succeed");
        } catch (IOException ex) {
            Logger.getLogger(InputFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveActionPerformed

    private void loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadActionPerformed
        // TODO add your handling code here:
        String fileName = JOptionPane.showInputDialog(null,"File Name : ","Load File", JOptionPane.QUESTION_MESSAGE);
        fileName =  fileName==null ? "" : fileName ;
        if(!fileName.equals(""))
        try {
            // TODO add your handling code here:
            String temp = "";
            BufferedReader br = new BufferedReader(new FileReader("PascalProject/" + fileName +".pas"));
            String line = "";
            while ((line = br.readLine()) != null) {                
                temp += line + "\n";
            }
            input.setText(temp);
            JOptionPane.showMessageDialog(null, "Load Success");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "File not found!");
        }
    }//GEN-LAST:event_loadActionPerformed

    private void inputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputKeyPressed
        // TODO add your handling code here:
        int key = evt.getKeyCode();
        if(key == 27){
            System.exit(0);
        }else if(key == 119){
            execute();
        }else if(key == 112){
            trigger();
        }
    }//GEN-LAST:event_inputKeyPressed

    private void compileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_compileMouseEntered
        // TODO add your handling code here:
        swapColor(0);
    }//GEN-LAST:event_compileMouseEntered

    private void compileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_compileMouseExited
        // TODO add your handling code here:
        swapColor(0);
    }//GEN-LAST:event_compileMouseExited

    private void saveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMouseExited
        // TODO add your handling code here:
        swapColor(1);
    }//GEN-LAST:event_saveMouseExited

    private void saveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMouseEntered
        // TODO add your handling code here:
        swapColor(1);
    }//GEN-LAST:event_saveMouseEntered

    private void loadMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadMouseExited
        // TODO add your handling code here:
        swapColor(2);
    }//GEN-LAST:event_loadMouseExited

    private void loadMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadMouseEntered
        // TODO add your handling code here:
        swapColor(2);
    }//GEN-LAST:event_loadMouseEntered
    
    void execute(){
        String code = " " + input.getText();
        new Compiler(code).execute();
        new OutputFrame().setVisible(true);
    }
    
    void swapColor(int n){
        Color temp;
        if(n == 0){
            temp = compile.getBackground();
            compile.setBackground(compile.getForeground());
            compile.setForeground(temp);
        }else if(n == 1){
            temp = save.getBackground();
            save.setBackground(save.getForeground());
            save.setForeground(temp);
        }else if(n == 2){
            temp = load.getBackground();
            load.setBackground(load.getForeground());
            load.setForeground(temp);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InputFrame().setVisible(true);
            }
        });
    }
    
    //<editor-fold defaultstate="collapsed" desc="easter egg">
    boolean rainbow = false;
    int r,g,b;
    Timer t;
    int phase = 1;
    void easter(){
        r = 255;
        g = b = 0;
        t = new Timer(10, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                int speed = 10;
                if(phase == 1){
                    r-=speed; g+=speed;
                    phase += r<=0 ? 1 : 0;
                }else if(phase == 2){
                    g-=speed; b+=speed;
                    phase += g<=0 ? 1 : 0;
                }else if(phase == 3){
                    b-=speed; r+=speed;
                    phase -= b<=0 ? 2 : 0;
                }
                r = r < 0 ? 0 : r; r = r > 255 ? 255 : r;
                g = g < 0 ? 0 : g; g = g > 255 ? 255 : g;
                b = b < 0 ? 0 : b; b = b > 255 ? 255 : b;
                rain1.setBackground(new Color(r,g,b));
                rain2.setBackground(new Color(r,g,b));
            }
        });
    }
    void trigger(){
        rainbow = !rainbow;
        if(!rainbow){
            rain1.setBackground(Color.black);
            rain2.setBackground(Color.black);
            t.stop();
        }else{
            t.start();
        }
    }
//</editor-fold>

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton compile;
    private javax.swing.JTextArea input;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton load;
    private javax.swing.JTextField rain1;
    private javax.swing.JTextField rain2;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables
}
